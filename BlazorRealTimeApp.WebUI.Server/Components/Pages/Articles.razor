@page "/articles"

@inject ISender Sender
@inject NavigationManager Navigation
@inject ILogger<Articles> Logger
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Articles</PageTitle>
<h3>Articles</h3>

@if (articles.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Content</th>
                <th>Date Published</th>
                <th>Is Published</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
                <tr>
                    <td>@article.Title</td>
                    <td>@article.Content</td>
                    <td>@article.DatePublished.ToShortDateString()</td>
                    <td>@article.IsPublished</td>
                    <td><button class="btn btn-primary" @onclick="() => EditHandler(article.Id)">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Article> articles = new();

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Initializing Articles component");

        await LoadData();
      
        Logger.LogInformation("SignalR connection started");
    }

    private async Task LoadData()
    {
        Logger.LogInformation("Loading articles data");
        var result = await Sender.Send(new GetAllArticlesQuery());
        if (result is not null)
            articles = result;
    }
    

    private void EditHandler(int articleId)
    {
        Logger.LogInformation("Navigating to edit article: {ArticleId}", articleId);
        Navigation.NavigateTo($"/articles/edit-article/{articleId}");
    }

}
